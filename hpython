#!/usr/bin/env python
#-*- coding: utf-8 -*-
"""Execute and analize Hebrew Python scripts """

from optparse import OptionParser
from code import InteractiveConsole

import hpy

class HebrewConsole(InteractiveConsole):
    
    def runsource(self, string, *args, **kw):
        try:
            # Terminal sends a byte string using some encoding.
            # TODO: detect real terminal encoding
            pystring = hpy.translateString(string.decode('utf8'),
                                           hpy.pythonString)
        # TODO: catch TokenError, turn into SyntaxError
        except:
            self.showtraceback()
        else:
           InteractiveConsole.runsource(self, pystring, *args, **kw)


# Parse options
parser = OptionParser(usage='usage: %prog [options] FILE',
                      version='%prog ' + hpy.__version__)

parser.add_option("-s", "--source",
                  action="store_true", dest="source",
                  help="show translated source")

parser.add_option("-t", "--tokens",
                  action="store_true", dest="tokens",
                  help="show tokens in source")

parser.set_defaults(source=False, tokens=False)

options, args = parser.parse_args()

# Run

if len(args) > 1:
    parser.error("too many files, I'm confused")
elif len(args) == 1:
    path = args[0]
    if options.tokens:
        hpy.printTokens(path)    
    if options.source:
        print hpy.source(path)
    hpy.execute(path)
else:    
    HebrewConsole().interact()

